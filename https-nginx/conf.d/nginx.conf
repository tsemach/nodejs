# ssl session config and reneg
  #ssl_protocols TLSv1.2;
  #ssl_session_cache shared:SSL:10m;
  #ssl_session_timeout 10m;
  #ssl_session_tickets off;
  #ssl_prefer_server_ciphers on;

  # ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

  # cipher without weaks
  # ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:DES-CBC3-SHA:!DSS';

  #ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305::ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:AES256-GCM-SHA384';

  # weak ciphers: ECDHE-RSA-AES256-SHA384, ECDHE-RSA-AES256-SHA, AES256-SHA256, AES256-SHA, ECDHE-RSA-AES128-SHA256, ECDHE-RSA-AES128-SHA, AES128-SHA256, AES128-SHA

  # Add headers to serve security related headers
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options "DENY";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Robots-Tag none;
  add_header X-Download-Options noopen;
  add_header X-Permitted-Cross-Domain-Policies none;
  proxy_hide_header X-Powered-By;

  resolver 8.8.8.8;

  # log_format basic '$remote_addr';
  log_format basic '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

  access_log /var/log/nginx/https.access.log basic;
  error_log /var/log/nginx/https.error.log;

  server {
    listen 8080;
    add_header X-Request-ID $request_id;

    location /health {
      root /usr/share/nginx/html;
      return 200 "<html><h2>8080 health is ok</h2></html>";
    }
  }

  # used for target group health check with proxy protocol enabled
  server {
    listen 8081;
    add_header X-Request-ID $request_id;

    location /health {
      root /usr/share/nginx/html;
      return 200 "<html><h2>8081 health is ok</h2></html>";
    }
  }

  server {
    listen 8443 ssl http2;

    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:DES-CBC3-SHA:!DSS';
    ssl_password_file       /etc/nginx/certs/ssl.pass;
    ssl_certificate         /etc/nginx/certs/server.crt;
    ssl_certificate_key     /etc/nginx/certs/server.key;
    ssl_client_certificate  /etc/nginx/certs/ca.crt;
    # ssl_verify_client on;
    ssl_verify_depth 2;
    ssl_protocols TLSv1.2;
    add_header X-Request-ID $request_id;
    add_header X-Forwarded-For $proxy_protocol_addr;

    location /health {
      return 200 "<html><h2>8080 health is ok</h2></html>";
    }
    
    location / {
      add_header Allow "GET, POST, PUT, DELETE" always;
      return 200 "<html><h2>8443 location / is ok</h2></html>";
    }    

    error_page 403 /forbidden_403.json;
    location = /forbidden_403.json {
      root /usr/share/nginx/html/nginx-errors/;
      internal;
    }

    error_page 404 /not_found_404.json;
    location = /not_found_404.json {
      root /usr/share/nginx/html/nginx-errors/;
      internal;
    }

    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
      root /usr/share/nginx/html/nginx-errors/;
    }
  }